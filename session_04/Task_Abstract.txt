ðŸ”· Task 1: Abstract Class and Abstract Method
Description:

Create an abstract class Animal with an abstract method makeSound().

Then create two subclasses:

Dog â€“ Implements makeSound() to print "Bark!"

Cow â€“ Implements makeSound() to print "Moo!"

Test:
Create instances of both Dog and Cow and call the makeSound() method.




ðŸ”· Task 2: Interface Implementation
Description:

Create an interface called Playable with a method play().

Then create two classes:

Football â€“ Implements play() to print "Playing Football"

Guitar â€“ Implements play() to print "Playing Guitar"

Test:
Create objects of both classes and call the play() method.




ðŸ”· Task 3: Interface with Multiple Implementations
Description:

Create an interface Shape with a method calculateArea().

Then create two classes:

Rectangle â€“ Accepts length and width, calculates area

Triangle â€“ Accepts base and height, calculates area

Test:
Create both shapes, call calculateArea() and print the result.




ðŸ”· Task 4: Abstract Class with Concrete and Abstract Methods
Description:

Create an abstract class Employee with:

A concrete method workHours() that prints "Working 9 to 5"

An abstract method calculateSalary()

Then create a subclass:

Manager â€“ Implements calculateSalary() to print "Manager salary is calculated"

Test:
Create a Manager instance and call both methods.




ðŸ”· Task 5: Interface Inheritance and Implementation
Description:

Create an interface Device with method start().

Create another interface SmartDevice that extends Device and adds a method connectToWiFi().

Then create a class SmartPhone that implements SmartDevice.

Test:
Create a SmartPhone object and call both start() and connectToWiFi() methods.