Task 1: Method Overloading
Create a class called Printer with the following methods:

print(int num) – Prints the integer number.

print(String text) – Prints the given string.

print(double value) – Prints the double value.

Test the program by calling the overloaded print() method with an integer, a string, and a double.


---------------------------------

Task 2: Inheritance and Method Overriding
Create a Parent class with a method called speak() that prints "I am the parent."

Then, create a Child class that extends the Parent class and overrides the speak() method to print "I am the child."

Test the program by creating an instance of Child and calling the speak() method.


---------------------------------

Task 3: Polymorphism with Method Overriding
Create a Vehicle class with a method called move() that prints "The vehicle is moving."

Then, create two subclasses:

Car – Override the move() method to print "The car is driving."

Bike – Override the move() method to print "The bike is cycling."

Create a Vehicle reference and assign it to instances of Car and Bike. Call the move() method using the Vehicle reference and observe polymorphism in action.


---------------------------------

Task 4: Polymorphism with Constructor
Create a Shape class with a constructor that takes a String color and sets the color of the shape. Then, create two subclasses:

Circle – Inherits from Shape and has a method to print the area of the circle.

Square – Inherits from Shape and has a method to print the area of the square.

Create instances of both Circle and Square with different colors and print out their areas. Demonstrate how polymorphism allows calling the correct method for each type of shape.


---------------------------------

Task 5: Animal Sound
Create a Parent class called Animal with a method called makeSound() that prints "Some animal sound."

Then, create two subclasses:

Dog – Override the makeSound() method to print "Bark!"

Cat – Override the makeSound() method to print "Meow!"

Create an Animal reference, assign it to Dog and Cat objects, and call the makeSound() method to observe polymorphism in action.


---------------------------------

Task 6: Polymorphism with Overloaded Constructors
Create a Person class with the following constructors:

Person(String name) – Initializes the person's name.

Person(String name, int age) – Initializes the person's name and age.

Test the program by creating instances of the Person class using both constructors, and print out the person's name and age.